variables:
  DOCKER_DRIVER: overlay
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

cache:
  key: "$CI_PROJECT_NAME"
  untracked: false
  policy: push

stages:
  - build
  - test
  - release

before_script:
  # install ssh-agent
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # run ssh-agent
  - eval $(ssh-agent -s)

  # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
  # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

build:library:
  image: ibmcom/swift-ubuntu:4.1
  stage: build
  script:
    - echo "Building release artifact"
    - swift build -c release -Xcc -fblocks -Xlinker -L/usr/local/lib
  artifacts:
    paths:
    - .build/release
    expire_in: 1 week
  tags:
    - docker
  when: manual
  only:
    - release

review:library:
  image: ibmcom/swift-ubuntu:4.1
  stage: test
  script:
    - echo "Reviewing $CI_PROJECT_NAME"
    - make build
    - make test
  only:
    - branches
  except:
    - master

test:library:
  image: ibmcom/swift-ubuntu:4.1
  stage: test
  script:
    - echo "Testing $CI_PROJECT_NAME"
    - make test
  tags:
    - docker
  only:
    - master
  artifacts:
    paths:
    - .build/debug